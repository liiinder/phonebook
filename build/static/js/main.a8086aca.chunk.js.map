{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/Persons.js","App.js","index.js"],"names":["Persons","persons","filter","onClick","personsToShow","person","name","toLowerCase","includes","map","number","id","PersonForm","onFormSubmit","onNameChange","onNumberChange","onSubmit","value","onChange","type","Filter","onFilterChange","Notification","message","className","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","soonRemoved","window","confirm","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","useEffect","initialPersons","event","target","preventDefault","search","find","setTimeout","catch","error","newPerson","length","returnedPerson","concat","toString","returned","x","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8086aca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, filter, onClick}) => {\r\n    const personsToShow = (filter === '')\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    return (\r\n    <ul>\r\n        { personsToShow.map(person => \r\n            <li key={person.id}>\r\n                {person.name}: {person.number}\r\n                <button id={person.id} onClick={onClick}>Delete</button>\r\n            </li>\r\n        )}\r\n    </ul>\r\n)}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({ onFormSubmit, name, onNameChange, number, onNumberChange }) => (\r\n    <form onSubmit={onFormSubmit}>\r\n        <div>\r\n            name: <input \r\n                value={name}\r\n                onChange={onNameChange}\r\n            />\r\n            <br />\r\n            number: <input\r\n                value={number}\r\n                onChange={onNumberChange}\r\n            />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({filter, onFilterChange}) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input\r\n            value={filter}\r\n            onChange={onFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","const Notification = ({message}) => {\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={`message ${message[1]}`}>\r\n            {message[0]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject) => {\r\n    return axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n}\r\n\r\nconst remove = soonRemoved => {\r\n    if (window.confirm(`Do you really want to delete ${soonRemoved.name}`))\r\n    {\r\n        return axios.delete(`${baseUrl}/${soonRemoved.id}`)\r\n    }\r\n    else return false\r\n}\r\n\r\nconst personService = { getAll, create, update, remove }\r\n\r\nexport default personService\r\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/Persons'\n \nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter] = useState ('')\n    const [ message, setMessage] = useState(null)\n\n    const handleAddName = (event) => setNewName(event.target.value)\n    const handleAddNumber = (event) => setNewNumber(event.target.value)\n    const handleFilter = (event) => setFilter(event.target.value)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const search = persons.find(person => person.name === newName)\n        if (search) {\n            if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n                search.number = newNumber;\n                personService\n                .update(search)\n                .then(\n                    setNewName(''),\n                    setNewNumber(''),\n                    setMessage([`Changed ${search.name}'s number`]),\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                    ).catch(error => {\n                        setMessage([error.message, \"error\"])\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n            }\n            else {\n                setNewName('')\n                setNewNumber('')\n                setMessage([\"Number was not replaced\", \"error\"])\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            }\n        }\n        else {\n            const newPerson = {\n                name: newName,\n                number: newNumber,\n                id: persons.length > 0 ? persons[persons.length - 1].id + 1 : 1\n            }\n            personService\n                .create(newPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setMessage([`Added ${newPerson.name}`])\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                }).catch(error => {\n                    setMessage([error.response.data.error, \"error\"])\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const removePerson = event => {\n        event.preventDefault()\n        const soonRemoved = persons.find(person => person.id.toString() === event.target.id)\n        personService\n            .remove(soonRemoved)\n            .then(returned => {\n                setPersons(persons.filter(x => x.id !== soonRemoved.id))\n                setMessage([`Information about ${soonRemoved.name} is removed`])\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            })\n            .catch(error => {\n                setMessage([`Information about ${soonRemoved.name} is already removed`, 'error'])\n                setTimeout(() => {\n                    setMessage(null)\n                }, 5000)\n            })\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <Filter \n                filter={filter}\n                onFilterChange={handleFilter}\n            />\n            <h2>Add new entry</h2>\n            <PersonForm\n                onFormSubmit={addPerson}\n                name={newName}\n                onNameChange={handleAddName}\n                number={newNumber}\n                onNumberChange={handleAddNumber}\n            />\n            <h2>Numbers</h2>\n            <Persons\n                persons={persons}\n                filter={filter}\n                onClick={removePerson}\n            />\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}